{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"//*","webpackCompilationHash":"390fae82aa755fcbf10d","result":{"data":{"deck":{"id":"77caa2f7-5f66-5f08-b551-dd8470ea8533","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* @jsx mdx */\nvar theme = _objectSpread({}, themes.future, {\n  colors: _objectSpread({}, themes.dark.colors, {\n    background: \"rgb(35, 36, 31)\"\n  })\n});\n\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Layout, {\n    header: mdx(\"h1\", {\n      style: {\n        textTransform: \"uppercase\",\n        fontSize: 80\n      }\n    }, \"Composing Better Predicates\"),\n    aside: mdx(\"div\", null, mdx(\"h3\", {\n      style: {\n        fontSize: 40\n      }\n    }, \"Rudi Yardley\"), mdx(\"p\", {\n      style: {\n        fontSize: 25\n      }\n    }, \"Melbourne, Australia\"), mdx(\"div\", {\n      style: {\n        paddingTop: 0,\n        width: 300\n      }\n    }, mdx(\"div\", {\n      style: {\n        fontSize: 25,\n        marginBottom: 5\n      }\n    }, mdx(Github, {\n      size: 40,\n      mdxType: \"Github\"\n    }), \"\\xA0 @ ryardley\"), mdx(\"div\", {\n      style: {\n        fontSize: 25,\n        marginBottom: 5\n      }\n    }, mdx(Twitter, {\n      size: 40,\n      mdxType: \"Twitter\"\n    }), \"\\xA0 @ rudiyardley\"), mdx(\"div\", {\n      style: {\n        fontSize: 25,\n        marginBottom: 5\n      }\n    }, mdx(LinkedinSquare, {\n      size: 40,\n      mdxType: \"LinkedinSquare\"\n    }), \"\\xA0 @ rudiyardley\"))),\n    mdxType: \"Layout\"\n  }, mdx(\"div\", {\n    style: {\n      marginTop: 55\n    }\n  }, mdx(\"p\", {\n    style: {\n      fontSize: 25\n    }\n  }, \"Freelance Fullstack Software Engineer\"), mdx(\"p\", {\n    style: {\n      fontSize: 20\n    }\n  }, \"TypeScript, JavaScript, React, Node\"), mdx(\"p\", {\n    style: {\n      fontSize: 20\n    }\n  }, \"Seek, Marketplacer, FTWK, Blockbid, many more over the last 19 years\"), mdx(\"p\", {\n    style: {\n      fontSize: 20\n    }\n  }, \"Currently travelling Europe focussing on blogging, open source and personal projects\"))), mdx(\"hr\", null), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"x !== null && x !== undefined\"), mdx(\"hr\", null), mdx(\"h4\", null, \"What is this?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nx !== null && x !== undefined\\n\"), mdx(\"hr\", null), mdx(\"h4\", null, \"Predicate expression\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nx !== null && x !== undefined\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Predicate expression\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nx !== null && x !== undefined\\n\"), mdx(\"p\", null, \"A predicate states, affirms, or asserts something about a subject.\"), mdx(\"hr\", null), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"if (x !== null && x !== undefined) {\\n  doSomething(x);\\n}\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Shortcut?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nif (x) {\\n  doSomething(x);\\n}\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Shortcut?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nif (x) {\\n  doSomething(x);\\n}\\n\"), mdx(\"p\", null, \"What if x is 0 or false?\"), mdx(\"hr\", null), mdx(\"h3\", null, \"No longer correct\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\n(x) vs (x !== null || x !== undefined)\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Why do we do this?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\n(x) vs (x !== null || x !== undefined)\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Preciates in JS are not concise enough\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Clear?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\ninput && typeof input.username === \\\"string\\\" && \\n!input.username.match(/[^0-9A-Z]/) && \\ninput.username.length >= 4 && \\ninput.username.length <= 8 && \\ntypeof input.password === \\\"string\\\" && \\ninput.password.match(/[^a-zA-Z0-9]/) && \\ninput.password.length > 8 && \\ninput.age > 17;\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Concise?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"input && typeof input.username === \\\"string\\\" && \\n!input.username.match(/[^0-9A-Z]/) && \\ninput.username.length >= 4 && \\ninput.username.length <= 8 && \\ntypeof input.password === \\\"string\\\" && \\ninput.password.match(/[^a-zA-Z0-9]/) && \\ninput.password.length > 8 && \\ninput.age > 17;\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Predicate function\"), mdx(Code, {\n    language: \"typescript\",\n    mdxType: \"Code\"\n  }, \"type PredicateFn = (x: any) => boolean;\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Predicate function\"), mdx(Code, {\n    language: \"typescript\",\n    mdxType: \"Code\"\n  }, \"const isNotNil = (x:any) => {\\n  return x !== null && x !== undefined;\\n}\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Predicate function\"), mdx(Code, {\n    language: \"typescript\",\n    mdxType: \"Code\"\n  }, \"if(isNotNil(x)) {\\n  doSomething(x);\\n}\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Complex predicate function\"), mdx(Code, {\n    language: \"typescript\",\n    mdxType: \"Code\"\n  }, \"const isUser = (input) => {\\n  return input && \\n    typeof input.username === \\\"string\\\" && \\n    !input.username.match(/[^0-9A-Z]/) && \\n    input.username.length >= 4 && \\n    input.username.length <= 8 && \\n    typeof input.password === \\\"string\\\" && \\n    input.password.match(/[^a-zA-Z0-9]/) && \\n    input.password.length > 8 && \\n    input.age > 17;\\n}\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Complex predicate function\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hard to understand intent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cant understand it immediately\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not concise due to JS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Needs to be well tested\")), mdx(\"hr\", null), mdx(\"h3\", null, \"Can we do better?\"), mdx(\"hr\", null), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Let's try with notNil - where is the essential information?\"), mdx(\"h3\", null, \"What is the essential information?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nx => x !== null && x !== undefined;\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"What is the essential information?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\n!== null && !== undefined\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"What is the essential information?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"!null && !undefined;\"), mdx(\"hr\", null), mdx(\"h3\", null, \"What is the essential information?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"!( null || undefined );\"), mdx(\"hr\", null), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"By removing the subject and some language boilerplate it is possible to define a predicate in a more precise way.\"), mdx(\"h3\", null, \"Boiled down\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\n!( null | undefined );\\n\"), mdx(\"hr\", null), mdx(\"p\", null, \"Wouldn't it be nice...\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"const notNil = !( null | undefined ); // \\uD83E\\uDD14\\n\\nnotNil(x);\"), mdx(\"hr\", null), mdx(\"p\", null, \"Syntax?\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"const notNil = p`!( null | undefined );`\\n\\nnotNil(x);\"), mdx(\"hr\", null), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, \"Well actually thats exactly what PDSL does!\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, '// 😊 PDSL\\nimport p from \"pdsl\";\\n\\nconst notNil = p`!( null | undefined )`;\\n\\nnotNil(x);\\n'), mdx(\"hr\", null), mdx(\"h2\", null, \"PDSL\"), mdx(\"p\", null, \"Helps write predicates expressively.\"), mdx(Notes, {\n    mdxType: \"Notes\"\n  }, mdx(\"li\", null, \"Is a new open source project I am involved in\"), mdx(\"li\", null, \"Provides a shorthand for composing predicate functions\")), mdx(\"hr\", null), mdx(Code, {\n    mdxType: \"Code\"\n  }, 'import p from \"pdsl\";\\n\\nconst hasName = p`{ name }`;\\n\\nhasName({ name: \"Nadia\" });'), mdx(\"hr\", null), mdx(Code, {\n    language: \"typescript\",\n    mdxType: \"Code\"\n  }, \"const isUser = (input) => {\\n  return input && \\n    typeof input.username === \\\"string\\\" && \\n    !input.username.match(/[^0-9A-Z]/) && \\n    input.username.length >= 4 && \\n    input.username.length <= 8 && \\n    typeof input.password === \\\"string\\\" && \\n    input.password.match(/[^a-zA-Z0-9]/) && \\n    input.password.length > 8 && \\n    input.age > 17;\\n}\"), mdx(\"hr\", null), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"const isUser = p`{\\n\\n  username: String \\n    & !${/[0-9A-Z]/} \\n    & { length: 4..8 },\\n\\n  password: String\\n    & !${/[a-zA-Z0-9]/} \\n    & { length: > 8 },\\n\\n  age: > 17\\n}`;\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Primitive matching\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"const isNumeric = p`Number`;\\nconst isBoolean = p`Boolean`;\\nconst isString = p`String`;\\nconst isObject = p`Object`;\\nconst isSymbol = p`Symbol`;\\nconst isFunction = p`Function`;\\nconst isArray = p`Array`;\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Range comparison\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nconst isTeenager = p`13..19`;\\nisTeenager(1); // true\\nisTeenager(5); // true\\nisTeenager(10); // true\\nisTeenager(11); // false\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Boolean operators\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nconst successOrFailure = p`{\\n  successMsg: String\\n} | {\\n  errorCode: Number,\\n  message: String\\n}`;\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Composable\"), mdx(Code, {\n    size: 30,\n    mdxType: \"Code\"\n  }, \"\\nconst validUsername = p`String \\n  & !${/[0-9]/} \\n  & !${/[A-Z]/} \\n  & { length: 4..8 }`;\\n\\nconst validPassword = p`String \\n  & ${/[^a-za-z0-9]/} \\n  & { length: > 8 }`;\\n\\nconst isValidUser = p`{ \\n  username: ${validUsername}, \\n  password: ${validPassword}, \\n  age: > 17 \\n}`;\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"TypeScript compatible\"), mdx(Code, {\n    size: 30,\n    language: \"typescript\",\n    mdxType: \"Code\"\n  }, \"type User = {\\n  name: string;\\n  password: string;\\n};\\n\\n// pass in User\\nconst isUser = p<User>`{\\n  name: String & { length: 3..8 },\\n  password: String & { length: > 5 }\\n}`;\\n\\nif(isUser(user)) {\\n  return user.name; // compiler is happy \\n}\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Reference equality\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nconst isTrue = p`true`; // value === true;\\nconst isFalse = p`false`; // value === false;\\nconst isNine = p`9`; // value === 9;\\nconst isRupert = p`\\\"Rupert\\\"`; // value === \\\"Rupert\\\";\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Empty comparisons\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nconst isEmptyArray = p`[]`;\\nconst isEmptyObject = p`{}`;\\nconst isEmptyString = p`\\\"\\\"`;\\nconst isUndefined = p`undefined`;\\nconst isNull = p`null`;\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"Array contains\"), mdx(Code, {\n    mdxType: \"Code\"\n  }, \"\\nconst isArrayWith7AndFoo = p`[7, \\\"foo\\\"]`;\\n\\nisArrayWith7AndFoo([1,2,3]); // false\\nisArrayWith7AndFoo([1,2,3,7,\\\"foo\\\"]); // true\\n\"), mdx(\"hr\", null), mdx(\"h3\", null, \"PDSL Syntax influenced by\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JavaScript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Styled components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ruby\")), mdx(\"hr\", null), mdx(\"h3\", null, \"PDSL Roadmap\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Babel plugin - performance!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Syntax highlighting\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extracting errors for form validation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Help with syntax design\")), mdx(\"hr\", null), mdx(\"h3\", null, \"PDSL on github\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ryardley/pdsl\"\n  }), \"https://github.com/ryardley/pdsl\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Please submit issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PRs become contibutors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Have some influence!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vote of what is important\")), mdx(\"hr\", null), mdx(Layout, {\n    header: mdx(React.Fragment, null, mdx(\"h1\", {\n      style: {\n        textTransform: \"uppercase\",\n        fontSize: 80\n      }\n    }, \"THANK YOU\"), mdx(\"p\", {\n      style: {\n        fontSize: 40\n      }\n    }, \"https://github.com/ryardley/pdsl\")),\n    aside: mdx(\"div\", null, mdx(\"h3\", {\n      style: {\n        fontSize: 40\n      }\n    }, \"Rudi Yardley\"), mdx(\"p\", {\n      style: {\n        fontSize: 25\n      }\n    }, \"Melbourne, Australia\"), mdx(\"div\", {\n      style: {\n        paddingTop: 0,\n        width: 300\n      }\n    }, mdx(\"div\", {\n      style: {\n        fontSize: 25,\n        marginBottom: 5\n      }\n    }, mdx(Github, {\n      size: 40,\n      mdxType: \"Github\"\n    }), \"\\xA0 @ ryardley\"), mdx(\"div\", {\n      style: {\n        fontSize: 25,\n        marginBottom: 5\n      }\n    }, mdx(Twitter, {\n      size: 40,\n      mdxType: \"Twitter\"\n    }), \"\\xA0 @ rudiyardley\"), mdx(\"div\", {\n      style: {\n        fontSize: 25,\n        marginBottom: 5\n      }\n    }, mdx(LinkedinSquare, {\n      size: 40,\n      mdxType: \"LinkedinSquare\"\n    }), \"\\xA0 @ rudiyardley\"))),\n    mdxType: \"Layout\"\n  }, mdx(\"div\", {\n    style: {\n      marginTop: 55\n    }\n  }, mdx(\"p\", {\n    style: {\n      fontSize: 30\n    }\n  }, \"Fullstack Engineer\"), mdx(\"p\", {\n    style: {\n      fontSize: 25\n    }\n  }, \"TypeScript, JavaScript, React & Node\"), mdx(\"p\", {\n    style: {\n      fontSize: 20\n    }\n  }, \"Talk to me if you need help with anything\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"//*","isCreatedByStatefulCreatePages":false,"id":"77caa2f7-5f66-5f08-b551-dd8470ea8533","slug":"","title":"What is this?"}}}